# bind -r = repeatable
# bind -n = no prefix required
# pane_current_path -> open new window/pane in same directory
# set -g = global
# set -a = append to string

set -g  history-limit         20000                  # Number of lines of scrollback per window
set -g  prefix                C-a                    # Global prefix to <ctrl>-a
set -g  base-index            1                      # Start windows off at 1 rather than 0
set -g  pane-base-index       1                      # Start panes off at 1 rather than 0
set -g  repeat-time           1000                   # Increase timeout for multiple C-key presses
set -g  renumber-windows      on                     # Adjust gaps in window numbering
set -g  mouse                 on                     # Allow mouse inputs
set -g  mode-keys             vi                     # Use VI bindings for copy-mode
set -g  escape-time           0                      # Wait time in ms to wait after an escape sequence
set -g  default-shell         /opt/homebrew/bin/zsh
set -g  default-command       /opt/homebrew/bin/zsh
set -g  status-keys           "vi"                   # When in the status bar (:command) use vi mode
set -g  status-interval       2                      # How often the status bar is updated
set -g  monitor-activity      on                     # Identify activity in other windows
set -g  visual-activity       off                    # Don't display a message in the status line
set -g  status                on                     # Show status line
set -g  default-terminal      "screen-256color"      # For TrueColor support
set -ga terminal-overrides    "xterm-256color*:Tc"   # For TrueColor support

unbind C-b                                          # Give C-b back

bind  -r      H   resize-pane   -L 5
bind  -r      J   resize-pane   -D 5
bind  -r      K   resize-pane   -U 5
bind  -r      L   resize-pane   -R 5
bind   e      last-pane \;  resize-pane -Z
bind   t      choose-tree                           # Select session shortcut
bind   b      choose-buffer
bind   !      break-pane -d                         # Break pane into a new window, keep focus on current window
bind   c      new-window -c "#{pane_current_path}"  # Creating new windows
bind   s      set-option status                       # Hide/unhide status line
bind   r      source-file ~/.tmux.conf               \; display "TMUX Config Reloaded!"
bind   h      split-window -h "htop"
bind   Space  copy-mode
bind   p      paste-buffer
bind   '\'    split-window -h -c "#{pane_current_path}" # Splitting panes vertically
bind   -      split-window -v -c "#{pane_current_path}" # Splitting panes horizontally

bind C-a    send-prefix                           # Send prefix through to the application
bind C-b    rotate-window -UZ                     # Rotate window backward
bind C-f    rotate-window -DZ                     # Rotate window forward
bind C-m    next-layout   # default
bind C-p    previous-window
bind C-n    next-window
bind C-s    set-window-option synchronize-panes    \; display "Toggling Synchronize Panes"
bind C-t    select-layout tiled
bind C-h    select-layout even-vertical
bind C-v    select-layout even-horizontal
bind C-m    select-layout main-horizontal
bind C-n    select-layout main-vertical
bind C-r    rotate-window

# Needed to allow C-h,j,k,l to work in VIM
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -T root C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"  # VI movement through panes
bind -T root C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"  # Allow them to also work in VIM sessions
bind -T root C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -T root C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
# bind -T copy-mode-vi C-\ select-pane -l
bind -T copy-mode-vi "'" send -X jump-to-mark
bind -T copy-mode-vi v   send -X begin-selection
bind -T copy-mode-vi y   send -X copy-selection-and-cancel \
     \; display "Selection Copied to ClipBoard"

# bind -T root WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M


## COLORSCHEME: gruvbox dark
# default statusbar color
set -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set -g pane-active-border-style fg=colour250 #fg2
set -g pane-border-style fg=colour237 #bg1

# message infos
set -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set -g display-panes-active-colour colour250 #fg2
set -g display-panes-colour colour237 #bg1

# clock
set -g clock-mode-colour colour109 #blue

# bell
set -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set -g status-left-length "80"
set -g status-right-style none
set -g status-right-length "80"
set -g window-status-separator ""

set -g status-left "#{?client_prefix,#[fg=colour241]#[bg=colour249] #S #[fg=colour249]#[bg=colour237]#[nobold]#[noitalics]#[nounderscore],#[fg=colour249]#[bg=colour241] #S #[fg=colour241]#[bg=colour237]#[nobold]#[noitalics]#[nounderscore]}"
set -g status-right "#{?pane_in_mode}, #{window_zoomed_flag} #{copy_cursor_x} #{copy_cursor_y} #{scroll_position} "
set -g window-status-current-format "#[fg=colour237, bg=colour214, nobold, noitalics, nounderscore]#[fg=colour239, bg=colour214] #I #[fg=colour239, bg=colour214, bold] #W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239] #I #[fg=colour223, bg=colour239] #W #[fg=colour239, bg=colour237, noitalics]"

#### NOTES/PASTURE
# The C- stands for Control. There’s also S- for Shift and M- for Alt, e.g. bind M-t new-window, bind -n M-S-Left swap-window -t +1. There are several special key names for use in bind commands, including: Up, Down, Left, Right, BSpace, Delete, End, Enter, Escape, F1 … F12, Home, Insert, PageDown or PgDn, PageUp or PgUp, Space and Tab.

# Pasture
# bind C-c    run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v    run "tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"
# bind P      pipe-pane -o "cat >>~/#H-#S-#I-#P.log" \; display "Toggled logging to ~/#H-#S-#I-#P.log"
# bind C-t    split-window -h 'nvim ~/self/docs/technical/$(ls ~/self/docs/technical | fzf-tmux -0)'
# bind C-d    split-window -h 'reattach-to-user-namespace nvim ~/self/docs/technical'
# set -g status-left "#{?pane_in_mode,#{pane_mode},#P} #{?client_prefix,#[fg=colour241]#[bg=colour249] #S #[fg=colour249]#[bg=colour237]#[nobold]#[noitalics]#[nounderscore],#[fg=colour249]#[bg=colour241] #S #[fg=colour241]#[bg=colour237]#[nobold]#[noitalics]#[nounderscore]}"

# set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour249, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248] #h "

# set -g status-right "#{?pane_in_mode,#[fg=colour241]#[bg=colour249]#{pane_mode},}"
